{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","images/image.png","api/index.js","components/Cards/Cards.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Table/Table.js","components/StickyFooter/StickyFooter.js","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","fetchTableData","headers","useQueryString","params","response","Cards","props","useState","newCases","setNewCases","newCasesDestructured","useEffect","getTableData","undefined","length","i","push","title","cases","new","time","info","item","className","styles","container","Grid","justify","spacing","style","key","component","Card","cx","card","CardContent","Typography","color","gutterBottom","is","variant","start","end","parseInt","duration","separator","Date","toDateString","Chart","setDailyData","fetchAPI","lineChart","labels","datasets","label","backgroundColor","borderColor","fill","barChart","value","options","legend","display","test","CountryPicker","handelCountryChange","setCountries","getCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","descendingComparator","b","orderBy","headCells","id","numeric","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","paddingRight","highlight","palette","type","secondary","main","lighten","light","text","primary","dark","flex","search","position","borderRadius","shape","fade","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","EnhancedTableToolbar","Toolbar","clsx","Tooltip","IconButton","aria-label","useStyles","marginTop","marginBottom","paper","table","minWidth","border","clip","margin","overflow","top","TableData","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","tableData","setTableData","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","size","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","toString","replace","day","population","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","Copyright","Link","href","getFullYear","flexDirection","minHeight","footer","grey","StickyFooter","CssBaseline","Container","maxWidth","fontSize","bottom","App","setData","setCountry","handleDataFetch","res","error","marginleft","image","src","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.672ee403.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = country ? `${url}/countries/${country}` : url;\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchTableData = async (country) => {\n  const url = \"https://covid-193.p.rapidapi.com/statistics\";\n\n  try {\n    const {\n      data: { response },\n    } = await axios.get(url, {\n      headers: {\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"5ee541612dmsh274f4b3d3135a95p1fc632jsn2b12d7ee936b\",\n        useQueryString: true,\n      },\n      params: {\n        country: country === \"\" ? null : country,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Cards.module.css\";\nimport { LoopCircleLoading } from \"react-loadingg\";\nimport { fetchTableData } from \"../../api\";\nimport cx from \"classnames\";\n\nconst Cards = (props) => {\n  let {\n    data: { confirmed },\n    country,\n  } = props;\n  const [newCases, setNewCases] = useState(\"\");\n  const newCasesDestructured = [];\n\n  useEffect(() => {\n    const getTableData = async () => {\n      setNewCases(await fetchTableData(country));\n    };\n    getTableData();\n  }, [country]);\n\n  if (newCases !== undefined && newCases !== null && newCases.length === 1) {\n    for (var i = 0; i < newCases.length; i++) {\n      newCasesDestructured.push(\n        {\n          title: \"New Cases\",\n          total: newCases[0].cases.new,\n          \"time updated\": newCases[0].time,\n          country: newCases[0].country,\n          info: \"New cases for Covid-19\",\n        },\n\n        {\n          title: \"Infected\",\n          total: newCases[0].cases.total,\n          \"time updated\": newCases[0].time,\n          country: newCases[0].country,\n          info: \"Number of active cases of Covid-19\",\n        },\n        {\n          title: \"Recovered\",\n          total: newCases[0].cases.recovered,\n          \"time updated\": newCases[0].time,\n          country: newCases[0].country,\n          info: \"Number of recoveries from Covid-19\",\n        },\n        {\n          title: \"Deaths\",\n          total: newCases[0].deaths.total,\n          \"time updated\": newCases[0].time,\n          country: newCases[0].country,\n          info: \"Number of deaths caused by Covid-19\",\n        }\n      );\n    }\n  } else if (\n    newCases !== undefined &&\n    newCases !== null &&\n    newCases.length > 1\n  ) {\n    newCases.map((item) => {\n      if (item.country === \"All\") {\n        newCasesDestructured.push(\n          {\n            title: \"New Cases\",\n            total: item.cases.new,\n            \"time updated\": item.time,\n            country: item.country,\n            info: \"New cases for Covid-19\",\n          },\n\n          {\n            title: \"Infected\",\n            total: item.cases.total,\n            \"time updated\": item.time,\n            country: item.country,\n            info: \"Number of active cases of Covid-19\",\n          },\n          {\n            title: \"Recovered\",\n            total: item.cases.recovered,\n            \"time updated\": item.time,\n            country: item.country,\n            info: \"Number of recoveries from Covid-19\",\n          },\n          {\n            title: \"Deaths\",\n            total: item.deaths.total,\n            \"time updated\": item.time,\n            country: item.country,\n            info: \"Number of deaths caused by Covid-19\",\n          }\n        );\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (country && newCasesDestructured.length === 0) {\n      const getTableData = async () => {\n        setNewCases(await fetchTableData());\n      };\n      getTableData();\n    }\n  }, [newCasesDestructured.length, country]);\n\n  return (\n    <div className={styles.container}>\n      {!confirmed ? (\n        <LoopCircleLoading />\n      ) : (\n        <Grid container justify=\"center\" spacing={3}>\n          {newCasesDestructured.map((item, i) => {\n            const style =\n              item.title === \"Infected\"\n                ? styles.confirmed\n                : item.title === \"Deaths\"\n                ? styles.deaths\n                : item.title === \"Recovered\"\n                ? styles.recovered\n                : item.title === \"New Cases\"\n                ? styles.newCases\n                : null;\n            return (\n              <Grid\n                item\n                key={i}\n                component={Card}\n                className={cx(styles.card, style)}\n              >\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    {item.title}{\" \"}\n                    {country && newCases.length === 1 ? (\n                      <text is=\"x3d\">-</text>\n                    ) : null}{\" \"}\n                    {country && newCases.length === 1 ? country : null}\n                  </Typography>\n                  <Typography variant=\"h5\">\n                    {item.title === \"New Cases\" ? \"+\" : null}\n                    <CountUp\n                      start={0}\n                      end={parseInt(item.total)}\n                      duration={2.5}\n                      separator=\",\"\n                    />\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    {new Date(item[\"time updated\"]).toDateString()}\n                  </Typography>\n                  <Typography variant=\"body2\">{item.info}</Typography>\n                </CardContent>\n              </Grid>\n            );\n          })}\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, [setDailyData]);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      className={styles.container}\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"infected\",\n            backgroundColor: \"rgba(0, 0, 100, 0.1)\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, test: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{!country ? lineChart : barChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { FormControl, NativeSelect, Typography } from \"@material-ui/core\";\nimport { fetchCountries, fetchTableData } from \"../../api\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nconst CountryPicker = ({ handelCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const getCountries = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    getCountries();\n  }, [setCountries]);\n\n  return countries.length ? (\n    <FormControl className={styles.formControl}>\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\n        Choose Country:\n      </Typography>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => {\n          handelCountryChange(e.target.value);\n          fetchTableData(e.target.value);\n        }}\n      >\n        <option value=\"\">Global</option>\n        <option value=\"USA\">USA</option>\n        <option value=\"Jordan\">Jordan</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  ) : null;\n};\n\nexport default CountryPicker;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, fade } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n// import InputBase from \"@material-ui/core/InputBase\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { fetchTableData } from \"../../api\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"country\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Country\",\n  },\n  { id: \"infected\", numeric: true, disablePadding: false, label: \"Infected\" },\n  { id: \"recovered\", numeric: true, disablePadding: false, label: \"Recovered\" },\n  { id: \"deaths\", numeric: true, disablePadding: false, label: \"Deaths\" },\n  { id: \"new cases\", numeric: true, disablePadding: false, label: \"New Cases\" },\n  {\n    id: \"date updated\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Date Updated\",\n  },\n  {\n    id: \"population\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Population\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, country } = props;\n\n  // const searchCountry = () => {\n  //   let input, filter, table, tr, td, i, txtValue;\n  //   input = document.getElementById(\"searchCountry\");\n  //   filter = input.value.toUpperCase();\n  //   table = document.getElementById(\"covid-19-table\");\n  //   tr = table.getElementsByTagName(\"TableCell\");\n  //   for (i = 0; i < tr.length; i++) {\n  //     td = tr[i].getElementsByTagName(\"td\")[0];\n  //     if (td) {\n  //       txtValue = td.textContent || td.innerText;\n  //       if (txtValue.toUpperCase().indexOf(filter) > -1) {\n  //         tr[i].style.display = \"\";\n  //       } else {\n  //         tr[i].style.display = \"none\";\n  //       }\n  //     }\n  //   }\n  // };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" component=\"div\">\n          Covid-19 Data {country ? \"-  \" + country : null}\n        </Typography>\n      )}\n\n      {/* <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"country...\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          id=\"searchCountry\"\n          onKeyUp={searchCountry()}\n          type=\"text\"\n        />\n      </div> */}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Copy\">\n          <IconButton aria-label=\"Copy\">\n            <FileCopyIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"50px\",\n    marginBottom: \"50px\",\n    paddingLeft: \"2%\",\n    paddingRight: \"1%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst TableData = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"population\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [tableData, setTableData] = useState([]);\n  const { country } = props;\n\n  useEffect(() => {\n    const getTableData = async () => {\n      setTableData(await fetchTableData(country));\n    };\n    getTableData();\n  }, [country]);\n\n  useEffect(() => {\n    if (country) {\n      setRowsPerPage(1);\n    } else {\n      setRowsPerPage(5);\n    }\n  }, [country]);\n\n  useEffect(() => {\n    if (tableData.length === 0) {\n      const getTableData = async () => {\n        setTableData(await fetchTableData());\n        setRowsPerPage(5);\n      };\n      getTableData();\n    }\n  }, [tableData]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = tableData.map((n) => n.country);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = tableData.length\n    ? rowsPerPage - Math.min(rowsPerPage, tableData.length - page * rowsPerPage)\n    : null;\n\n  return (\n    <div className={classes.root}>\n      {tableData.length ? (\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar\n            country={country}\n            numSelected={selected.length}\n            tableData={tableData}\n          />\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? \"small\" : \"medium\"}\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={tableData.length}\n              />\n              <TableBody>\n                {stableSort(tableData, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((item, index) => {\n                    const isItemSelected = isSelected(item.country);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, item.country)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={item.country}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{ \"aria-labelledby\": labelId }}\n                          />\n                        </TableCell>\n                        <TableCell\n                          component=\"th\"\n                          id={labelId}\n                          scope=\"row\"\n                          padding=\"none\"\n                        >\n                          {item.country}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {item.cases.total\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          {item.cases.recovered\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          {item.deaths.total\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                        </TableCell>\n                        {item.cases.new !== null &&\n                        item.cases.new !== undefined ? (\n                          <TableCell align=\"right\">\n                            {item.cases.new\n                              .toString()\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                          </TableCell>\n                        ) : (\n                          <TableCell align=\"right\">0</TableCell>\n                        )}\n                        <TableCell align=\"right\">\n                          {new Date().toDateString(item.day)}\n                        </TableCell>\n                        {item.population !== null &&\n                        item.population !== undefined ? (\n                          <TableCell align=\"right\">\n                            {item.population\n                              .toString()\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                          </TableCell>\n                        ) : (\n                          <TableCell align=\"right\">-</TableCell>\n                        )}\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 50, tableData.length]}\n            component=\"div\"\n            count={tableData.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      ) : null}\n      {tableData.length ? (\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"Dense padding\"\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default TableData;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nfunction Copyright() {\n  return (\n    <div>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        {\"Copyright © \"}\n        <Link color=\"inherit\" href=\"https://ammar-alkhooly.herokuapp.com/\">\n          Ammar Alkhooly\n        </Link>{\" \"}\n        {new Date().getFullYear()}\n        {\".\"}\n      </Typography>\n      <p>\n        Email:{\" \"}\n        <a href=\"mailto:ammaralkhooly1@gmail.com\"> ammaralkhooly1@gmail.com</a>\n      </p>\n      Phone: <a href=\"tel:+962780623701\">+962780623701</a>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"15vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nconst StickyFooter = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">\n            <Link color=\"inherit\" href=\"https://github.com/AmmarAlkhooly98\">\n              <GitHubIcon fontSize=\"small\" />\n              <text is=\"x3d\" style={{ position: \"relative\", bottom: \"4px\" }}>\n                &nbsp;&nbsp; A M M R &nbsp; A L K H O O L Y\n              </text>\n            </Link>\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n};\n\nexport default StickyFooter;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Cards, Chart, CountryPicker, Table, StickyFooter } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport image from \"./images/image.png\";\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState(\"\");\n\n  const handleDataFetch = async () => {\n    try {\n      const res = await fetchData();\n      setData(res);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handelCountryChange = async (country) => {\n    try {\n      const res = await fetchData(country);\n      setData(res);\n      setCountry(country);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    handleDataFetch();\n  }, []);\n  return (\n    <div className={styles.container} style={{ marginleft: \"0%\" }}>\n      <img className={styles.image} src={image} alt=\"COVID-19\" />\n      <Cards data={data} country={country} />\n      <CountryPicker handelCountryChange={handelCountryChange} />\n      <Chart data={data} country={country} />\n      <Table country={country} />\n      <div className={styles.push}></div>\n      {data.confirmed && <StickyFooter />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"newCases\":\"Cards_newCases__3WLhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};"],"sourceRoot":""}